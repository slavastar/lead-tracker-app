datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String           @id @default(uuid()) @db.Uuid
  email     String           @unique
  name      String?
  credits   Int              @default(10)
  leads     Lead[]
  profile   UserProfile?
  purchases CreditPurchase[]
  runs      PromptRun[]
}

model Lead {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  email     String
  company   String?
  userId    String   @db.Uuid
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

model UserProfile {
  id        String   @id @default(uuid()) @db.Uuid
  bio       String?
  userId    String   @unique @db.Uuid
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model CreditPurchase {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @db.Uuid
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  credits   Int
  createdAt DateTime @default(now())

  @@index([userId])
}

model PromptTemplate {
  id        String   @id @default(uuid()) @db.Uuid
  key       String
  version   Int
  label     String
  body      String                     
  isActive  Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  runs      PromptRun[]

  @@unique([key, version])
  @@index([key, isActive])
}

model PromptRun {
  id               String   @id @default(uuid()) @db.Uuid
  userId           String   @db.Uuid
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  leadId           String?  @db.Uuid
  templateId       String   @db.Uuid
  template         PromptTemplate @relation(fields: [templateId], references: [id], onDelete: Cascade)
  templateKey      String
  templateVersion  Int
  language         String
  formality        String
  variables        Json
  finalPrompt      String
  model            String
  tokenCount       Int
  response         String
  createdAt        DateTime  @default(now())

  @@index([userId])
  @@index([templateKey, templateVersion])
}